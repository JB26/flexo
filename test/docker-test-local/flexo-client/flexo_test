#!/bin/bash

# shellcheck disable=SC2016

function fail_and_exit() {
  printf "%-50s %s\n" "$TESTCASE" "[FAILURE]"
  exit 1
}

function print_success() {
  printf "%-50s %s\n" "$TESTCASE" "[SUCCESS]"
}

## ==============================================================================================================
TESTCASE='flexo-test-concurrent-download-non-blocking'
# Downloading a larger file does not stop another client from obtaining a small file quickly.
## ==============================================================================================================
echo 'Server = http://flexo-server-slow-primary:7878/$repo/os/$arch' > /etc/pacman.d/mirrorlist
# First, we start downloading a relatively large file:
timeout -v 600 curl http://flexo-server-slow-primary:7878/zero > /dev/null &
CURL_PID=$!
# Next, we download a smaller package:
SMALL_PACKAGE='realtime-privileges'
DOWNLOAD_PATH=$(pacman -Sp $SMALL_PACKAGE)

timeout -v 5 curl "$DOWNLOAD_PATH" > /dev/null || fail_and_exit
# The download of the second package should have completed before the first download.
if ps -p $CURL_PID >/dev/null; then
  print_success
else
  fail_and_exit
fi

## ==============================================================================================================
TESTCASE='flexo-test-download-file-malformed-xattr'
# Files can be downloaded if their extended attribute cannot be parsed to an integer
## ==============================================================================================================
CHECKSUM='752027099aeff4f4093d6155af59405f96734b62f5667a25dee7d66425763a9f'
curl http://flexo-server-fast:7878/test-malformed-xattr > /tmp/test-malformed-xattr || fail_and_exit
cat /tmp/test-malformed-xattr
echo $CHECKSUM /tmp/test-malformed-xattr | sha256sum --check - || fail_and_exit
print_success
