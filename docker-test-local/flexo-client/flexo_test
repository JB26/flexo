#!/bin/bash

# shellcheck disable=SC2016

function fail_and_exit() {
  printf "%-50s %s\n" "$TESTCASE" "[FAILURE]"
  exit 1
}

function print_success() {
  printf "%-50s %s\n" "$TESTCASE" "[SUCCESS]"
}

## ==============================================================================================================
TESTCASE="flexo-test-mirror-selection-slow-mirror-startup"
# Having an extremely slow mirror does not cause flexo's startup time to increase significantly.
## ==============================================================================================================
TIMEOUT="0.2"
timeout $TIMEOUT pacman -S --noconfirm --noprogressbar --downloadonly mozilla-common || fail_and_exit
# Being able to download this file is taken as proof that flexo has started successfully within the TIMEOUT.
print_success

## ==============================================================================================================
TESTCASE="flexo-test-mirror-selection-slow-mirror"
# If a remote mirror turns out to be very slow, flexo switches to another mirror.
## ==============================================================================================================
echo 'Server = http://flexo-server-slow-primary:7878/$repo/os/$arch' > /etc/pacman.d/mirrorlist
TIMEOUT="2"
timeout $TIMEOUT pacman -S --noconfirm --noprogressbar --downloadonly dnstracer || fail_and_exit
# Being able to download this file within the timeout is taken as proof that the fast mirror has been selected.
print_success

## ==============================================================================================================
TESTCASE="flexo-test-mirror-selection-slow-mirror"
# If a remote mirror turns out to be very slow, flexo switches to another mirror.
## ==============================================================================================================
echo 'Server = http://flexo-server-slow-primary:7878/$repo/os/$arch' > /etc/pacman.d/mirrorlist
TIMEOUT="2"
timeout $TIMEOUT pacman -S --noconfirm --noprogressbar --downloadonly dnstracer || fail_and_exit
# Being able to download this file within the timeout is taken as proof that the fast mirror has been selected.
print_success

## ==============================================================================================================
TESTCASE="flexo-test-malformed-header"
# Sending a malformed header does not cause the server to crash.
## ==============================================================================================================
echo 'malformed header' | nc -v flexo-server-slow-primary 7878
curl -f http://flexo-server:7878/status || fail_and_exit
# Being able to download this file within the timeout is taken as proof that the fast mirror has been selected.
print_success

## ==============================================================================================================
TESTCASE='flexo-test-concurrent-download-non-blocking'
# Downloading a larger file does not stop another client from obtaining a small file quickly.
## ==============================================================================================================
echo 'Server = http://flexo-server-slow-primary:7878/$repo/os/$arch' > /etc/pacman.d/mirrorlist
# First, we start downloading a relatively large file:
curl http://flexo-server-slow-primary:7878/zero > /dev/null &
CURL_PID=$!
# Next, we download a smaller package:
SMALL_PACKAGE='realtime-privileges'
DOWNLOAD_PATH=$(pacman -Sp $SMALL_PACKAGE)
curl "$DOWNLOAD_PATH" > /dev/null || fail_and_exit
# The download of the second package should have completed before the first download.
if ps -p $CURL_PID >/dev/null; then
  print_success
else
  fail_and_exit
fi


